# Inputs:
#   NxN integer square
# Actions:
#   Remove one interger in every column, and the removed integers in adjacent columns are not in the same row.
# Question:
#   In all possible removal solutions, give the minimal sum of the rest numbers. (留下的数字之和的最小值。)

def minimalSum(array):
    if not array or len(array) < 2 or len(array[0]) == 0:
        return 0

    # two variables, keeping the max and second max of previous column
    prevMax, prevSecondMax = (0, 0), (0, 0)
    # two variables , keeping and updating the max and second max of the current column
    curMax, curSecondMax = (float('-inf'), 0), (float('-inf'), 0)
    for col in range(0, len(array[0])):
        for row in range(len(array)):
            cur = array[row][col] + prevMax[0] if prevMax[1] != row else array[row][col] + prevSecondMax[0]
            if cur > curMax[0]:
                curMax, curSecondMax = (cur, row), curMax
            elif cur > curSecondMax[0]:
                curSecondMax = (cur, row)
        prevMax, prevSecondMax = curMax, curSecondMax

    total = sum([sum(array[row]) for row in range(len(array))])

    return total - curMax[0]
    
    
print(minimalSum([[1, 2, 3],
                  [-5, 4, 5]]))

print(minimalSum([[1, 2, 3],
                  [5, 4, 5]]))
